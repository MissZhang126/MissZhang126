/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-08-08 01:01:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class roleList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>角色列表</title>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/jquery-3.4.1.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/jqPaginator.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/zTreeStyle.css\"/>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/jquery.ztree.core.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/js/jquery.ztree.excheck.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"application/javascript\" src=\"/js/bootstrap.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        ul.ztree {\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("            border: 1px solid #617775;\r\n");
      out.write("            background: #f0f6e4;\r\n");
      out.write("            /*  width: 220px; */\r\n");
      out.write("            height: 350px;\r\n");
      out.write("            overflow-y: scroll;\r\n");
      out.write("            overflow-x: auto;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .box {\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <table class=\"table\">\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>ID</td>\r\n");
      out.write("            <td>角色</td>\r\n");
      out.write("            <td>操作</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("    <div class=\"pagination-layout\">\r\n");
      out.write("        <div class=\"pagination\">\r\n");
      out.write("            <ul class=\"pagination\" total-items=\"pageInfo.totalRows\" max-size=\"10\" boundary-links=\"true\">\r\n");
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      if (_jspx_meth_shiro_005fhasPermission_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" onclick=\"returnUp()\">返回</button>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"myModal\" class=\"modal\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header text-center\">\r\n");
      out.write("                <h4>权限修改</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"box\">\r\n");
      out.write("                    <ul id=\"tree1\" class=\"ztree\"></ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" onclick=\"getPerIds()\">确认</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-warning\" data-dismiss=\"modal\">取消</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"myModal2\" class=\"modal\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header text-center\">\r\n");
      out.write("                <h4>新增角色</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <label>角色名称：</label>\r\n");
      out.write("                <input type=\"text\" name=\"rName\"/>\r\n");
      out.write("                <div class=\"box\">\r\n");
      out.write("                    <ul id=\"tree2\" class=\"ztree\"></ul>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" onclick=\"add()\">确认</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-warning\" data-dismiss=\"modal\">取消</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"application/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    function returnUp() {\r\n");
      out.write("        window.location.href = \"/login/check1\";\r\n");
      out.write("    }\r\n");
      out.write("    var if_firstime = true;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    window.onload = function () {\r\n");
      out.write("        $('.pagination').jqPaginator({\r\n");
      out.write("            totalPages: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.pages}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(",\r\n");
      out.write("            visiblePages: 5,\r\n");
      out.write("            currentPage: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(",\r\n");
      out.write("\r\n");
      out.write("            first: '<li class=\"first\"><a href=\"javascript:void(0);\">第一页</a></li>',\r\n");
      out.write("            prev: '<li class=\"prev\"><a href=\"javascript:void(0);\">上一页</a></li>',\r\n");
      out.write("            next: '<li class=\"next\"><a href=\"javascript:void(0);\">下一页</a></li>',\r\n");
      out.write("            last: '<li class=\"last\"><a href=\"javascript:void(0);\">最末页 </a></li>',\r\n");
      out.write("            page: '<li class=\"page\"><a href=\"javascript:void(0);\">{{page}}</a></li>',\r\n");
      out.write("\r\n");
      out.write("            onPageChange: function (num) {\r\n");
      out.write("                if (if_firstime) {\r\n");
      out.write("                    if_firstime = false;\r\n");
      out.write("                } else if (!if_firstime) {\r\n");
      out.write("                    changePage(num);\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function changePage(num) {\r\n");
      out.write("\r\n");
      out.write("        location.href = \"/getRole?pageNum=\" + num;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //    回填数据\r\n");
      out.write("    function modal(rId) {\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        var zTree1 = $.fn.zTree.getZTreeObj(\"tree1\");\r\n");
      out.write("        zTree1.checkAllNodes(false);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        var rId = rId;\r\n");
      out.write("\r\n");
      out.write("        $.ajax({\r\n");
      out.write("\r\n");
      out.write("            //            请求路径\r\n");
      out.write("            url: '/getAllPer',\r\n");
      out.write("            //            请求方式\r\n");
      out.write("            type: 'get',\r\n");
      out.write("            //            method=type\r\n");
      out.write("            //            请求参数\r\n");
      out.write("            data: {\r\n");
      out.write("                \"rId\": rId\r\n");
      out.write("            },\r\n");
      out.write("            //            期望的返回值类型(默认String，一般写json)\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            //            同步还是异步 true是异步\r\n");
      out.write("            async: true,\r\n");
      out.write("            contentType: \"application/json\",\r\n");
      out.write("            traditional: true,\r\n");
      out.write("            //            回调函数\r\n");
      out.write("            success: function (result) {\r\n");
      out.write("                if (result.data.length > 0) {\r\n");
      out.write("                    $.each(result.data, function (i, per) {\r\n");
      out.write("//                                1、根据id获取树的某个节点：\r\n");
      out.write("                        var zTree = $.fn.zTree.getZTreeObj(\"tree1\");\r\n");
      out.write("//                                console.log(zTree)\r\n");
      out.write("                        var node = zTree.getNodeByParam(\"pId\", per.pid);\r\n");
      out.write("//                                console.log(node);\r\n");
      out.write("//                                2、设置node节点选中状态：\r\n");
      out.write("                        zTree.selectNode(node);\r\n");
      out.write("\r\n");
      out.write("                        node.checked = true;\r\n");
      out.write("//                                3、设置node节点checked选中\r\n");
      out.write("                        zTree.checkNode(node, true, true);\r\n");
      out.write("\r\n");
      out.write("                    })\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            },\r\n");
      out.write("            error: function () {\r\n");
      out.write("//                alert(\"请求失败\");\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //    修改\r\n");
      out.write("    function getPerIds() {\r\n");
      out.write("        var ids = [];\r\n");
      out.write("//        var ids2 = [];\r\n");
      out.write("//        var checkedNode = tree1.getTreeCheckedNodes(true);\r\n");
      out.write("\r\n");
      out.write("//        获取选中的树节点\r\n");
      out.write("        var treeObj = $.fn.zTree.getZTreeObj(\"tree1\");\r\n");
      out.write("        var nodes = treeObj.getCheckedNodes(true);\r\n");
      out.write("//        console.log(nodes);\r\n");
      out.write("//        放入数组中\r\n");
      out.write("        for (var i = 0; i < nodes.length; i++) {\r\n");
      out.write("            ids.push(nodes[i].pId);\r\n");
      out.write("//            ids2.push(nodes[i].name);\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("//        console.log(ids);\r\n");
      out.write("\r\n");
      out.write("        $.ajax({\r\n");
      out.write("\r\n");
      out.write("            //            请求路径\r\n");
      out.write("            url: '/updatePerRole',\r\n");
      out.write("            //            请求方式\r\n");
      out.write("            type: 'get',\r\n");
      out.write("            //            method=type\r\n");
      out.write("            //            请求参数\r\n");
      out.write("            data: {\r\n");
      out.write("                ids: ids\r\n");
      out.write("            },\r\n");
      out.write("            //            期望的返回值类型(默认String，一般写json)\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            //            同步还是异步 true是异步\r\n");
      out.write("            async: true,\r\n");
      out.write("            contentType: \"application/json\",\r\n");
      out.write("            traditional: true,\r\n");
      out.write("            //            回调函数\r\n");
      out.write("            success: function (result) {\r\n");
      out.write("                alert(result.msg);\r\n");
      out.write("                // 刷新页面\r\n");
      out.write("                window.location.reload();\r\n");
      out.write("            },\r\n");
      out.write("            error: function () {\r\n");
      out.write("//                alert(\"请求失败\");\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //    ztree设置\r\n");
      out.write("    var setting = {\r\n");
      out.write("\r\n");
      out.write("        view: {\r\n");
      out.write("            dblClickExpand: true,\r\n");
      out.write("            selectedMulti: true,//可以多选\r\n");
      out.write("            showLine: true\r\n");
      out.write("        },\r\n");
      out.write("        check: {\r\n");
      out.write("            enable: true,//显示复选框\r\n");
      out.write("            chkStyle: \"checkbox\",\r\n");
      out.write("            /*其中Y表示被checkbox被勾选时的联动情况，N表示取消勾选时的联动情况。\r\n");
      out.write("             chkboxTyoe:{\"Y\":\"ps\",\"N\":\"ps\"}\r\n");
      out.write("             \"p\"表示操作会影响父节点，“s”表示操作会影响子节点。*/\r\n");
      out.write("            chkboxType: {\"Y\": \"p\", \"N\": \"ps\"}\r\n");
      out.write("        },\r\n");
      out.write("        data: {\r\n");
      out.write("            key: {\r\n");
      out.write("                title: \"t\"\r\n");
      out.write("            },\r\n");
      out.write("            simpleData: {\r\n");
      out.write("                enable: true,\r\n");
      out.write("                idKey: \"pId\",\r\n");
      out.write("                pIdKey: \"parentId\",\r\n");
      out.write("                rootPId: 0\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        async: {\r\n");
      out.write("\r\n");
      out.write("            enable: true,\r\n");
      out.write("            autoParam: [\"mid=pid\"]\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //请求controller获取数据\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("        jQuery.ajax({\r\n");
      out.write("            url: \"/tree\",\r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            contentType: \"application/json;charset=utf-8\",\r\n");
      out.write("            success: function (data) {\r\n");
      out.write("//                修改\r\n");
      out.write("                $.fn.zTree.init($(\"#tree1\"), setting, data);\r\n");
      out.write("//                新增\r\n");
      out.write("                $.fn.zTree.init($(\"#tree2\"), setting, data);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    /*//点击节点的onclick事件\r\n");
      out.write("     function getInfoId(id) {\r\n");
      out.write("     var id = id;\r\n");
      out.write("     //        alert(id);\r\n");
      out.write("\r\n");
      out.write("     }\r\n");
      out.write("     */\r\n");
      out.write("    //    新增\r\n");
      out.write("    function add() {\r\n");
      out.write("\r\n");
      out.write("        var ids = [];\r\n");
      out.write("//        获取选中节点\r\n");
      out.write("        var treeObj = $.fn.zTree.getZTreeObj(\"tree2\");\r\n");
      out.write("\r\n");
      out.write("        var nodes = treeObj.getCheckedNodes(true);\r\n");
      out.write("//        console.log(nodes);\r\n");
      out.write("\r\n");
      out.write("        for (var i = 0; i < nodes.length; i++) {\r\n");
      out.write("            ids.push(nodes[i].pId);\r\n");
      out.write("        }\r\n");
      out.write("        console.log(ids);\r\n");
      out.write("//        获取input框内容 ： 姓名\r\n");
      out.write("        var a = document.getElementsByName(\"rName\");\r\n");
      out.write("        var rNames = [];\r\n");
      out.write("        for (var j = 0; j < a.length; j++) {\r\n");
      out.write("            rNames.push(a[j].value);\r\n");
      out.write("        }\r\n");
      out.write("//        console.log(rNames);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        $.ajax({\r\n");
      out.write("\r\n");
      out.write("            //            请求路径\r\n");
      out.write("            url: '/addRole',\r\n");
      out.write("            //            请求方式\r\n");
      out.write("            type: 'get',\r\n");
      out.write("            //            method=type\r\n");
      out.write("            //            请求参数\r\n");
      out.write("            data: {\r\n");
      out.write("                ids: ids,\r\n");
      out.write("                rNames: rNames\r\n");
      out.write("            },\r\n");
      out.write("            //            期望的返回值类型(默认String，一般写json)\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            //            同步还是异步 true是异步\r\n");
      out.write("            async: true,\r\n");
      out.write("            contentType: \"application/json\",\r\n");
      out.write("            traditional: true,\r\n");
      out.write("            //            回调函数\r\n");
      out.write("            success: function (result) {\r\n");
      out.write("                alert(result.msg);\r\n");
      out.write("                // 刷新页面\r\n");
      out.write("                window.location.reload();\r\n");
      out.write("            },\r\n");
      out.write("            error: function () {\r\n");
      out.write("//                alert(\"请求失败\");\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/jsp/roleList.jsp(52,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/roleList.jsp(52,8) '${pageInfo.list}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${pageInfo.list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/jsp/roleList.jsp(52,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("list");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            <tr>\r\n");
          out.write("                <td>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.RId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</td>\r\n");
          out.write("                <td>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.RName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</td>\r\n");
          out.write("                <td>");
          if (_jspx_meth_shiro_005fhasPermission_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("                    ");
          if (_jspx_meth_shiro_005fhasPermission_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("                </td>\r\n");
          out.write("            </tr>\r\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f0 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f0.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /WEB-INF/jsp/roleList.jsp(56,20) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f0.setName("user:updateRole");
    int _jspx_eval_shiro_005fhasPermission_005f0 = _jspx_th_shiro_005fhasPermission_005f0.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                    <button class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#myModal\"\r\n");
        out.write("                            onclick=\"modal(");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.RId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write(")\">修改\r\n");
        out.write("                    </button>\r\n");
        out.write("                ");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f1 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f1.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /WEB-INF/jsp/roleList.jsp(61,20) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f1.setName("user:deleteRole");
    int _jspx_eval_shiro_005fhasPermission_005f1 = _jspx_th_shiro_005fhasPermission_005f1.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                        <a href=\"/deleteRole/");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.RId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("\" class=\"btn btn-danger\">删除</a>\r\n");
        out.write("                    ");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f2 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f2.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f2.setParent(null);
    // /WEB-INF/jsp/roleList.jsp(75,4) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f2.setName("user:addRole");
    int _jspx_eval_shiro_005fhasPermission_005f2 = _jspx_th_shiro_005fhasPermission_005f2.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("        <button class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#myModal2\">新增</button>\r\n");
        out.write("    ");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
    return false;
  }
}
